[
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
        // Adds a block comment in the editor when text is focused and the editor is not read-only.
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
        // Removes the default block comment shortcut (shift+alt+a) in favor of the custom shortcut (ctrl+shift+/).
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
        // Toggles the terminal visibility when the terminal is active using the ctrl+t shortcut.
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
        // Removes the default terminal toggle shortcut (ctrl+`) in favor of the custom shortcut (ctrl+t).
    },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        // Formats the document when a formatting provider is available, the editor is focused, and it's not read-only.
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        // Removes the default format document shortcut (shift+alt+f) in favor of the custom shortcut (ctrl+shift+f).
    },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
        // Assigns the ctrl+shift+f shortcut to a custom no-op command when no formatting provider is available.
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
        // Toggles Zen Mode using the F11 key unless an auxiliary window is focused.
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
        // Splits the terminal when the terminal is active using the ctrl+shift+t shortcut.
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
        // Removes the default terminal split shortcut (ctrl+shift+5) in favor of the custom shortcut (ctrl+shift+t).
    }
]